import { beta } from './beta';
import { lbeta } from './lbeta';
import { IRNGNormal } from '../rng/normal';
import { numVector } from '../types';
export declare const special: {
    beta: typeof beta;
    lbeta: typeof lbeta;
};
export declare function Beta(rng?: IRNGNormal): Readonly<{
    dbeta: (x: numVector, shape1: numVector, shape2: numVector, ncp?: number | number[] | undefined, log?: boolean | boolean[] | undefined) => numVector;
    pbeta: <T>(q: T, shape1: number, shape2: number, ncp?: number | undefined, lowerTail?: boolean, logP?: boolean) => T;
    qbeta: <T>(p: T, shape1: number, shape2: number, ncp?: number | undefined, lowerTail?: boolean, logP?: boolean) => T;
    rbeta: (n: number, shape1: number, shape2: number, ncp?: number) => numVector;
}>;
